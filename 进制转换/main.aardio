
import win.ui;
import math
import win.clip
/*DSG{{*/
mainForm = win.form(text="进制转换";right=634;bottom=231;max=false;topmost=1)
mainForm.add(
edit={cls="edit";text="XX.XX";left=53;top=70;right=170;bottom=113;edge=1;font=LOGFONT(h=-20;name='Times New Roman');multiline=1;z=2};
static={cls="static";text="Static";left=435;top=70;right=588;bottom=117;font=LOGFONT(h=-19);notify=1;transparent=1;z=1};
static2={cls="static";text="Static";left=434;top=103;right=541;bottom=143;font=LOGFONT(h=-19);transparent=1;z=3};
static3={cls="static";text="十六进制";left=327;top=69;right=414;bottom=100;font=LOGFONT(h=-19);transparent=1;z=4};
static4={cls="static";text="十进制";left=327;top=100;right=399;bottom=160;font=LOGFONT(h=-19);notify=1;transparent=1;z=5}
)
/*}}*/

FunCodeHByte = ""
FunCodeLByte = ""
FunCodeHex = ""
HighHex = 0
LowHex = 0
DotPos = 0		//小数点位置
Date = 0

mainForm.static.oncommand = function(id,event){
	mainForm.text = "test"
}



mainForm.edit.translateAccelerator = function(msg){ 
   if( msg.wParam == 0xD/*_VK_ENTER*/ ){
        if( msg.message == 0x101/*_WM_KEYUP*/ ){
            //FunCodeHByte = string.split(tostring(mainForm.edit.text),'.')
        	DotPos = string.indexAny(tostring(mainForm.edit.text),'.')		//得到小数点位置
        	FunCodeHByte = string.slice(tostring(mainForm.edit.text),1,DotPos-1)	//小数点前面的
        	FunCodeLByte = string.slice(tostring(mainForm.edit.text),DotPos+1,-1)	//小数点后面的
        	HighHex = DecToHex(tonumber(FunCodeHByte))		//十六进制高位
        	LowHex = DecToHex(tonumber(FunCodeLByte))		////十六进制低位
        	FunCodeHex = HighHex ++ LowHex		//已转换十六进制
            mainForm.static.text = FunCodeHex//table.unpack(FunCodeHByte)	//高字节
            mainForm.static2.text = tonumber(FunCodeHex,16)+1//table.unpack(FunCodeHByte)	//高字节
            win.clip.write(mainForm.static2.text)
        }
        return true;
    }	

}


DecToHex = function(num){
	var tempInt,tempChar
	var tempH,tempL		//存放临时变量取余结果
	if(num < 16 )
	{
		if(num < 10)
		{
			tempInt = num
			return tostring(tempInt); 
		}
		else {
			tempChar = string.pack(string.unpack('A') + num - 10)
			return tempChar
		}
	}
	else {
		if((num%16)>0)
		{
			tempInt = num % 16

			//先处理余数
			if(tempInt < 10)
			{
				tempChar = tostring(tempInt)
			}
			else {
				tempChar = string.pack(string.unpack('A') + tempInt - 10)
			}
			
			//处理商并且下取整
			tempH = math.floor(num/16)

			string.repeat(tostring(tempH),tostring(tempChar))
			return tostring(tempH)++tostring(tempChar)
		}
		else {
			return tostring(num/16)+'0'
		}
		
	}
		
}

mainForm.show();
return win.loopMessage();